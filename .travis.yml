language: cpp
sudo: required

matrix:
  include:
    - os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'ppa:jonathonf/ffmpeg-4'
          packages:
            - g++-7
            - libswresample-dev libswscale-dev libavcodec-dev libavformat-dev libavresample-dev
            - libglib2.0-dev
            - unzip
            - libjson-c-dev intltool pkg-config
            - # for gperftools
            - autoconf automake libtool libunwind-dev
            - # skia dependencies
            - build-essential freeglut3-dev libfontconfig-dev libfreetype6-dev
            - libgif-dev libgl1-mesa-dev libglu1-mesa-dev libharfbuzz-dev
            - libicu-dev libjpeg-dev libpng-dev libwebp-dev
            - p7zip-full libpulse-dev libxkbcommon-x11-0 libgstreamer-plugins-base1.0-0
            - libgtk2.0-dev
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - QT_INSTALL_DIR=~/Qt
        - QT_VERSION=5.12.4
        - QT_CONTENT=${QT_INSTALL_DIR}/${QT_VERSION}/gcc_64
        - QT_BIN=${QT_CONTENT}/bin
        - PATH="${QT_BIN}:${PATH}"
        - QT_LIB=${QT_CONTENT}/lib
        - LD_LIBRARY_PATH="${QT_LIB}:${LD_LIBRARY_PATH}"
        - TRAVIS_CACHE_DIR=$TRAVIS_BUILD_DIR/cache
cache:
    directories:
        - $TRAVIS_CACHE_DIR
before_install:
    - eval "${MATRIX_EVAL}"
    - wget https://raw.githubusercontent.com/qbs/qbs/master/scripts/install-qt.sh
    - chmod +x install-qt.sh
    - ./install-qt.sh -d ${QT_INSTALL_DIR} --version ${QT_VERSION} qtbase qttools qtsvg qtmultimedia qtdeclarative qtwebengine qtwebchannel qtwebview qtlocation qtserialport icu
install:
    - # Install qt5ct for a native look
    - wget -c https://excellmedia.dl.sourceforge.net/project/qt5ct/qt5ct-0.41.tar.bz2
    - tar xf qt5ct-0.*.tar.bz2
    - cd qt5ct-0.*/
    - QT_SELECT=5 qmake
    - make -j 2 && sudo make install
    - cd ..
    - # Travis clones submodules for us, only library patches are needed
    - cd third_party
    - make patch
    - # build skia
    - |
      if ! [ -d $TRAVIS_CACHE_DIR/third_party/skia/out/Release ]; then
          cd skia
          python tools/git-sync-deps
          # sudo tools/install_dependencies.sh
          wget https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip
          unzip ninja-linux.zip
          chmod +x ninja
          bin/gn gen out/Release --args='is_official_build=true is_debug=false extra_cflags=["-Wno-error"] target_os="linux" target_cpu="x64" skia_use_system_expat=false skia_use_system_freetype2=false skia_use_system_libjpeg_turbo=false skia_use_system_libpng=false skia_use_system_libwebp=false skia_use_system_zlib=false skia_use_system_harfbuzz=false skia_use_system_icu=false cc="gcc-7" cxx="g++-7"'
          ./ninja -C out/Release -j 2
          mkdir -p $TRAVIS_CACHE_DIR/third_party/skia/out/Release
          cp -r ./out/Release/* $TRAVIS_CACHE_DIR/third_party/skia/out/Release
          cd ..
      else
          mkdir -p ./skia/out/Release
          cp -r $TRAVIS_CACHE_DIR/third_party/skia/out/Release/* ./skia/out/Release
      fi
    - # build libmypaint
    - cd libmypaint
    - export CFLAGS='-fopenmp -Ofast -ftree-vectorize -fopt-info-vec-optimized -funsafe-math-optimizations -funsafe-loop-optimizations -fPIC'
    - ./autogen.sh
    - ./configure --enable-static --enable-openmp --enable-shared=false
    - sudo make -j 2
    - ln -s `pwd` libmypaint
    - unset CFLAGS
    - cd ..
    - # build quazip
    - cd quazip/quazip
    - qmake
    - make -j 2
    - sudo make install
    - cd ../../
    - # build gperftools
    - cd gperftools
    - ./autogen.sh
    - ./configure --prefix /usr LIBS=-lpthread
    - make -j 2
    - cd ..
    - # build QScintilla
    - cd qscintilla/Qt4Qt5
    - qmake
    - make -j 2
    - sudo make install
    - cd ../../../
before_script:
    - cd build
    - wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage
    - chmod +x linuxdeployqt-6-x86_64.AppImage
    - wget https://github.com/darealshinji/AppImageKit-checkrt/releases/download/continuous/AppRun-patched-x86_64
    - mv AppRun-patched-x86_64 AppRun
    - chmod +x AppRun
    - wget https://github.com/darealshinji/AppImageKit-checkrt/releases/download/continuous/exec-x86_64.so
    - mv exec-x86_64.so exec.so
    - cd Release
script:
    - # embed commit hash and date
    - LATEST_COMMIT_HASH=\"$(git log --pretty=format:'%h' -n 1)\"
    - enveSplash=../../src/app/GUI/envesplash.h
    - echo "#ifndef LATEST_COMMIT_HASH" >> $enveSplash
    - echo "#define LATEST_COMMIT_HASH $LATEST_COMMIT_HASH" >> $enveSplash
    - echo "#endif" >> $enveSplash
    - LATEST_COMMIT_DATE=\"$(git log -1 --format=%ai)\"
    - echo "#ifndef LATEST_COMMIT_DATE" >> $enveSplash
    - echo "#define LATEST_COMMIT_DATE $LATEST_COMMIT_DATE" >> $enveSplash
    - echo "#endif" >> $enveSplash
    - qmake ../../enve.pro
    - make -j 2 CC=gcc-7 CPP=g++-7 CXX=g++-7 LD=g++-7
    - cd ..
    - # Generate AppImage
    - cp AppRun AppDir/
    - cp exec.so AppDir/usr/optional
    - mkdir AppDir/usr/optional/libstdc++
    - cp /usr/lib/x86_64-linux-gnu/libstdc++.so.6 AppDir/usr/optional/libstdc++/
    - cp Release/src/app/enve AppDir/usr/bin/
    - cp -av Release/src/core/*.so* AppDir/usr/lib/
    - cp -av ../third_party/gperftools/.libs/libtcmalloc.so* AppDir/usr/lib/
    - ./linuxdeployqt-6-x86_64.AppImage AppDir/usr/share/applications/enve.desktop -appimage -extra-plugins=platformthemes/libqt5ct.so,styles/libqt5ct-style.so
after_success:
    - |
      export GREP_PATH=grep;
      curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/MaurycyLiebner/enve/commits/master -o repo.txt;
      export REMOTE=$($GREP_PATH -Po '(?<=: \")(([a-z0-9])\w+)(?=\")' -m 1 repo.txt);
      export LOCAL=$(git rev-parse HEAD);
      if [[ "$REMOTE" != "$LOCAL" ]]; then echo "Build no longer current. $REMOTE vs $LOCAL - aborting upload."; exit 0; fi;
      wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh;
      export UPLOADTOOL_SUFFIX="linux";
      bash upload.sh enve*.AppImage*;
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
